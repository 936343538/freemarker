<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${package}.${className?uncap_first}.dao.${className}Dao">
    <resultMap id="${className!}Map" type="${package}.${className?uncap_first}.domain.${className}">
    <#list table.columns as column>
        <!--${column.columnComment}-->
        <#if column.columnKey="1">
        <id column="${column.columnName}" jdbcType="${column.columnDbType}" property="${column.columnName2}"/>
        <#else >
        <result column="${column.columnName}" jdbcType="${column.columnDbType}" property="${column.columnName2}"/>
        </#if>
    </#list>
    </resultMap>

    <!--列信息-->
    <sql id="columnList">
        <#list table.columns as column>
            ${column.columnName}<#if column_has_next>,</#if>
        </#list>
    </sql>
    <!--保存-->
    <insert id="insert" parameterType="${package}.${className?uncap_first}.domain.${className}">
        INSERT INTO ${table.name}(<include refid="columnList"/>)
        VALUES (
        <#list table.columns as column>
            ${r"#{"}${column.columnName2},jdbcType=${column.columnDbType}}<#if column_has_next>,</#if>
        </#list>
        )
    </insert>
    <insert id="insertSelective" parameterType="${package}.${className?uncap_first}.domain.${className}">
        insert into ${table.name}
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <#list table.columns as column>
        <if test="${column.columnName2} != null">
            ${column.columnName}<#if column_has_next>,</#if>
        </if>
        </#list>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <#list table.columns as column>
            <if test="${column.columnName2} != null">
            ${r"#{"}${column.columnName2},jdbcType=${column.columnDbType}}<#if column_has_next>,</#if>
            </if>
        </#list>
        </trim>
    </insert>

    <!--根据主键查询对象数据-->
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="${className!}Map">
        SELECT
        <include refid="columnList"/>
        FROM ${table.name}
        WHERE ${capId} = ${r"#{"}${id}}
    </select>

    <!--根据主键删除-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        DELETE FROM ${table.name}
        WHERE ${capId} = ${r"#{"}${id}}
    </delete>

    <!--更新-->
    <update id="updateByPrimaryKey" parameterType="${package}.${className?uncap_first}.domain.${className}">
        UPDATE ${table.name}
        <set>
            <#list table.columns as column>
                <#if column.columnKey="0">
            <if test="${column.columnName2} != null">
            ${column.columnName} = ${r"#{"}${column.columnName2},jdbcType=${column.columnDbType}}<#if column_has_next>,</#if>
            </if>
                </#if>
            </#list>
        </set>
        WHERE ${capId} = ${r"#{"}${id}}
    </update>

    <!--列表查询-->
    <select id="queryByCriteria" resultMap="${className!}Map">
        SELECT
        <include refid="columnList"/>
        FROM ${table.name}
        <include refid="criteria_filters"/>
    </select>

    <!--criteria的动态条件-->
    <sql id="criteria_filters">
        <where>
            <if test="criteria!=null">
                <trim prefix="(" suffix=")" prefixOverrides="AND">
                    <foreach collection="criteria.criterion" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                AND ${r"${criterion.condition}"}
                            </when>
                            <when test="criterion.singleValue">
                                AND ${r"${criterion.condition} #{criterion.value}"}
                            </when>
                            <when test="criterion.betweenValue">
                                AND ${r"${criterion.condition} #{criterion.value} and #{criterion.secondValue}"}
                            </when>
                            <when test="criterion.listValue">
                                AND ${r"${criterion.condition}"}
                                <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                    ${r"#{listItem}"}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </where>
    </sql>

    <!--批量删除-->
    <delete id="deleteBatch">
        DELETE FROM ${table.name}
        WHERE ${capId} IN(
        <foreach collection="idList" item="item" index="index" separator=",">
            ${r"#{item,jdbcType=VARCHAR}"}
        </foreach>
        )
    </delete>

</mapper>